name: Continuous integration

on:
  push:
    branches: [master]
  pull_request:


env:
  SECRET_KEY: topsecret123


jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: youth_membership
          POSTGRES_PASSWORD: youth_membership
          POSTGRES_DB: youth_membership

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache pip packages
        uses: actions/cache@v2
        env:
          cache-name: cache-pip-modules
        with:
          path: ~/.pip-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r requirements.txt -r requirements-dev.txt codecov
      - name: Run tests
        run: pytest -ra -vv --doctest-modules --cov=.
        env:
          DATABASE_URL: postgres://youth_membership:youth_membership@localhost:5432/youth_membership

      - name: Coverage
        run: codecov

  black:
    name: Coding style - black
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run black
        uses: psf/black@stable
        with:
          args: ". --check"

  flake8:
    name: Coding style - flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install flake8 pep8-naming flake8-bugbear
      - name: Run flake8
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: flake8
          run: flake8

  isort:
    name: Coding style - isort
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install isort
      - name: Run isort
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: isort
          run: isort -c .
